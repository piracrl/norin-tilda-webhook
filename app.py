import os
import json
from datetime import datetime

import pytz
import telebot
from telebot import types
from flask import Flask, request
from flask_sqlalchemy import SQLAlchemy
from flask_migrate import Migrate

# --- –ö–æ–Ω—Ñ–∏–≥ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
TOKEN = os.getenv("TELEGRAM_TOKEN")  
CHAT_ID = os.getenv("CHAT_ID")  
WEBHOOK_URL = f"https://bot.nor1n-store.ru/bot_webhook"

if not TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
if not CHAT_ID:
    raise RuntimeError("CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# --- Flask / DB ---
app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///orders.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db = SQLAlchemy(app)
migrate = Migrate(app, db)

# --- –ú–æ–¥–µ–ª—å –∑–∞–∫–∞–∑–∞ ---
class Order(db.Model):
    __tablename__ = "orders"
    id = db.Column(db.Integer, primary_key=True)
    order_id = db.Column(db.String(50))
    products = db.Column(db.Text)
    amount = db.Column(db.String(20))
    fio = db.Column(db.String(200))
    email = db.Column(db.String(100))
    phone = db.Column(db.String(50))
    city = db.Column(db.String(100))
    address = db.Column(db.String(200))
    telegram = db.Column(db.String(50))
    paid = db.Column(db.Boolean, default=False)

bot = telebot.TeleBot(TOKEN)

# --- –í–µ–±—Ö—É–∫ –¥–ª—è Telegram ---
@app.route(f"/bot_webhook", methods=["POST"])
def telegram_webhook():
    json_str = request.get_data(as_text=True)
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "OK", 200

# --- –í–µ–±—Ö—É–∫ –¥–ª—è –¢–∏–ª—å–¥—ã ---
@app.route('/tilda_order', methods=['POST'])
def tilda_order():
    try:
        data = request.form.to_dict()
        payment_data = json.loads(data.get("payment", "{}"))

        order_id = payment_data.get("orderid", "‚Äî")
        products = payment_data.get("products", [])
        amount = payment_data.get("amount", "‚Äî")

        products_text = "\n".join(products) if products else "‚Äî"

        tz = pytz.timezone("Asia/Yekaterinburg")
        now = datetime.now(tz).strftime("%d.%m.%Y %H:%M")

        fio = data.get("name", "‚Äî")
        email = data.get("email", "‚Äî")
        phone = data.get("phone", "‚Äî")
        address = data.get("address", "‚Äî")
        city = data.get("city", "‚Äî")
        tg_username = data.get("telegram", "")
        tg_link = f"@{tg_username}" if tg_username else "‚Äî"

        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ –ë–î
        order = Order(
            order_id=order_id,
            products=products_text,
            amount=str(amount),
            fio=fio,
            email=email,
            phone=phone,
            city=city,
            address=address,
            telegram=tg_username or None
        )
        db.session.add(order)
        db.session.commit()

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = (
            "üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å —Å–∞–π—Ç–∞ NOR1N STORE\n\n"
            f"üì¶ –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order_id}\n"
            f"üïí –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {now}\n\n"
            f"–¢–æ–≤–∞—Ä—ã:\n{products_text}\n\n"
            f"C—É–º–º–∞: {amount} —Ä—É–±\n\n"
            f"–§–ò–û: {fio}\n"
            f"Email: {email}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
            f"–ê–¥—Ä–µ—Å: {address}\n"
            f"–ì–æ—Ä–æ–¥: {city}\n"
            f"Telegram: {tg_link}"
        )

        #–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–∞–≤—Ü—É
        bot.send_message(CHAT_ID, message)
        return "ok"
    except Exception as e:
        print("–û—à–∏–±–∫–∞ tilda_order:", e)
        db.session.rollback()
        return "error", 500

# –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–ú–ê–ù–î –ö–õ–ò–ï–ù–¢–ê
@bot.message_handler(commands=["start"])
def start(message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("üìã –ú–æ–π –∑–∞–∫–∞–∑")
    kb.add("üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã", "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")

    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç üëã\n–Ø –±–æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ Nor1n Store.\n\n"
        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ, –æ–ø–ª–∞—Ç–µ –∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.",
        reply_markup=kb
    )

    username = message.from_user.username
    if username:
        order = (
            Order.query.filter_by(telegram=username)
            .order_by(Order.id.desc())
            .first()
        )
        if order:
            paid_text = "‚úÖ –û–ø–ª–∞—á–µ–Ω" if order.paid else "‚åõ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã"
            kb.add("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª")
            order_msg = (
                f"üì¶ –ú—ã –Ω–∞—à–ª–∏ —Ç–≤–æ–π –∑–∞–∫–∞–∑!\n\n"
                f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order.order_id}\n"
                f"–°—Ç–∞—Ç—É—Å: {paid_text}\n\n"
                f"–¢–æ–≤–∞—Ä—ã:\n{order.products}\n\n"
                f"–°—É–º–º–∞: {order.amount} —Ä—É–±\n\n"
                f"–§–ò–û: {order.fio}\n"
                f"–¢–µ–ª–µ—Ñ–æ–Ω: {order.phone}\n"
                f"–ê–¥—Ä–µ—Å: {order.city}, {order.address}\n"
                f"Email: {order.email}\n\n"
                f"–ü—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Å—Ö–æ–¥–∏—Ç—Å—è ‚Äî –Ω–∞–ø–∏—à–∏ –Ω–∞–º."
            )
            bot.send_message(message.chat.id, order_msg, reply_markup=kb)

@bot.message_handler(func=lambda m: isinstance(m.text, str) and "–†–µ–∫–≤–∏–∑–∏—Ç—ã" in m.text and "–æ–ø–ª–∞—Ç" in m.text)
def payment_info(message):
    username = message.from_user.username
    order = None
    if username:
        order = Order.query.filter_by(telegram=username).order_by(Order.id.desc()).first()

    amount_text = f"\n–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {order.amount} —Ä—É–±" if order else ""
    bot.send_message(
        message.chat.id,
        "üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n\n–¢-–ë–∞–Ω–∫\n2200 7007 4343 1685\n–°–∞–≤–µ–ª–∏–π –ü." + amount_text
    )

@bot.message_handler(func=lambda msg: msg.text == "üìã –ú–æ–π –∑–∞–∫–∞–∑")
def my_order(message):
    username = message.from_user.username
    if not username:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏, –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –∑–∞–∫–∞–∑. –£ —Ç–µ–±—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω username –≤ Telegram üòï")
        return
    
    order = (
            Order.query.filter_by(telegram=username)
            .order_by(Order.id.desc())
            .first()
        )

    if order:
        status_text = "‚úÖ –û–ø–ª–∞—á–µ–Ω" if order.paid else "‚åõ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã"
        bot.send_message(
            message.chat.id,
            f"–¢–≤–æ–π –∑–∞–∫–∞–∑:\n\n"
            f"–ù–æ–º–µ—Ä: {order.order_id}\n"
            f"{order.products}\n"
            f"–°—É–º–º–∞: {order.amount} —Ä—É–±\n"
            f"–°—Ç–∞—Ç—É—Å: {status_text}\n\n"
            f"–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {order.city}, {order.address}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {order.phone}"
        )
    else:
        bot.send_message(message.chat.id, "–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω üòï")

@bot.message_handler(func=lambda msg: msg.text == "‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª")
def payment_confirmed(message):
    username = message.from_user.username
    if not username:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏, –Ω–µ —Å–º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É. –£ —Ç–µ–±—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω username –≤ Telegram üòï")
        return

    order = Order.query.filter_by(telegram=username).order_by(Order.id.desc()).first()
    if order:
        order.paid = True
        db.session.commit()

        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –ú—ã –æ—Ç–º–µ—Ç–∏–ª–∏, —á—Ç–æ —Ç—ã –æ–ø–ª–∞—Ç–∏–ª –∑–∞–∫–∞–∑. –°–∫–æ—Ä–æ –º—ã –≤—Å—ë –ø—Ä–æ–≤–µ—Ä–∏–º –∏ —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π.")
        notify = (
            "üí∏ –ö–ª–∏–µ–Ω—Ç —Å–æ–æ–±—â–∏–ª –æ–± –æ–ø–ª–∞—Ç–µ!\n\n"
            f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order_id}\n"
            f"Telegram: @{username}\n"
            f"–°—É–º–º–∞: {amount} —Ä—É–±"
        )
        bot.send_message(CHAT_ID, notify)
    else:
        bot.send_message(message.chat.id, "‚ùå –£ –Ω–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç–≤–æ—ë–º –∑–∞–∫–∞–∑–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É @nor1nstore_buy.")

@bot.message_handler(func=lambda msg: msg.text == "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
def contact_manager(message):
    bot.send_message(message.chat.id, "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –º–æ–∂–Ω–æ —Ç—É—Ç: @nor1nstore_buy")

if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL)
    app.run(host="0.0.0.0", port=10000)