import os
from flask import Flask, request
import telebot
import pytz
from datetime import datetime
import json
from telebot import types

TOKEN = os.getenv("TELEGRAM_TOKEN")  # —Å–æ—Ö—Ä–∞–Ω–∏ —Ç–æ–∫–µ–Ω –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
CHAT_ID = os.getenv("CHAT_ID")  # –∏ chat_id —Ç–æ–∂–µ
WEBHOOK_URL = f"https://bot.nor1n-store.ru/bot_webhook"

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–∫–∞–∑–æ–≤ (–ø–æ—Ç–æ–º –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ë–î)
ORDERS = {}

# --- –í–µ–±—Ö—É–∫ –¥–ª—è Telegram ---
@app.route(f"/bot_webhook", methods=["POST"])
def telegram_webhook():
    json_str = request.get_data(as_text=True)
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "OK", 200

# --- –í–µ–±—Ö—É–∫ –¥–ª—è –¢–∏–ª—å–¥—ã ---
@app.route('/tilda_order', methods=['POST'])
def tilda_order():
    try:
        data = request.form.to_dict()  # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã –¢–∏–ª—å–¥—ã
        print("FORM DATA:", data)  # –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ –ª–æ–≥–∞—Ö

        # –î–æ—Å—Ç–∞—ë–º –ø–æ–ª—è
        payment_data = json.loads(data.get("payment", "{}"))

        order_id = payment_data.get("orderid", "‚Äî")
        products = payment_data.get("products", [])
        amount = payment_data.get("amount", "‚Äî")

        # –∫—Ä–∞—Å–∏–≤–æ —Å–æ–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä—ã
        products_text = "\n".join(products) if products else "‚Äî"

        # –í—Ä–µ–º—è –ø–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥—É
        tz = pytz.timezone("Asia/Yekaterinburg")
        now = datetime.now(tz).strftime("%d.%m.%Y %H:%M")

        # –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
        fio = data.get("name", "‚Äî")
        email = data.get("email", "‚Äî")
        phone = data.get("phone", "‚Äî")
        address = data.get("address", "‚Äî")
        city = data.get("city", "‚Äî")
        tg_username = data.get("telegram", "")
        tg_link = f"@{tg_username}" if tg_username else "‚Äî"

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –ø–æ telegram username
        ORDERS[tg_link] = {
            "id": order_id,
            "products": products,
            "amount": amount,
            "fio": data.get("name", ""),
            "email": data.get("email", ""),
            "phone": data.get("phone", ""),
            "city": data.get("city", ""),
            "address": data.get("address", ""),
        }

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = (
            "üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å —Å–∞–π—Ç–∞ NOR1N STORE\n\n"
            f"üì¶ –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order_id}\n"
            f"üïí –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {now}\n\n"
            f"–¢–æ–≤–∞—Ä—ã:\n{products_text}\n\n"
            f"C—É–º–º–∞: {amount} —Ä—É–±\n\n"
            f"–§–ò–û: {fio}\n"
            f"Email: {email}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
            f"–ê–¥—Ä–µ—Å: {address}\n"
            f"–ì–æ—Ä–æ–¥: {city}\n"
            f"Telegram: {tg_link}"
        )

        #–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–∞–≤—Ü—É
        bot.send_message(CHAT_ID, message)
        return "ok"
    except Exception as e:
        print("–û—à–∏–±–∫–∞:", e)
        return "error", 500

# –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–ú–ê–ù–î –ö–õ–ò–ï–ù–¢–ê
@bot.message_handler(commands=["start"])
def start(message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("üìã –ú–æ–π –∑–∞–∫–∞–∑")
    kb.add("üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã", "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")

    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç üëã\n–Ø –±–æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ Norin Store.\n\n"
        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ, –æ–ø–ª–∞—Ç–µ –∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.",
        reply_markup=kb
    )

    # --- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–∫–∞–∑ —É –∫–ª–∏–µ–Ω—Ç–∞ ---
    username = message.from_user.username
    if username in ORDERS:
        order = ORDERS[username]
        order_msg = (
            f"üì¶ –ú—ã –Ω–∞—à–ª–∏ —Ç–≤–æ–π –∑–∞–∫–∞–∑!\n\n"
            f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order['order_id']}\n"
            f"üëï –¢–æ–≤–∞—Ä—ã:\n{order['products']}\n\n"
            f"üí≥ –°—É–º–º–∞: {order['amount']} —Ä—É–±\n\n"
            f"üôç –§–ò–û: {order['name']}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {order['phone']}\n"
            f"üè† –ê–¥—Ä–µ—Å: {order['address']}, {order['city']}\n"
            f"üìß Email: {order['email']}\n\n"
            "–ü—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Å—Ö–æ–¥–∏—Ç—Å—è ‚Äî –Ω–∞–ø–∏—à–∏ –Ω–∞–º."
        )
    bot.send_message(message.chat.id, order_msg)  

# –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–û–ö
def my_order(message):
    username = message.from_user.username
    if username and username in ORDERS:
        order = ORDERS[username]
        bot.send_message(
            message.chat.id,
            f"–í–∞—à –∑–∞–∫–∞–∑:\n\n"
            f"üì¶ –ù–æ–º–µ—Ä: {order['order_id']}\n"
            f"üëï {order['products']}\n"
            f"üí≥ –°—É–º–º–∞: {order['amount']} —Ä—É–±"
        )
    else:
        bot.send_message(message.chat.id, "–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω üòï")

@bot.message_handler(func=lambda msg: msg.text == "üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã")
def payment_info(message):
    bot.send_message(message.chat.id, "üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n\n–°–±–µ—Ä–±–∞–Ω–∫\n1234 5678 9012 3456\n–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤")

@bot.message_handler(func=lambda msg: msg.text == "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
def contact_manager(message):
    bot.send_message(message.chat.id, "üìû –ù–∞–ø–∏—à–∏—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É: @your_manager")

if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL)
    app.run(host="0.0.0.0", port=10000)